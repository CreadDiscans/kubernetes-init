# Source: authservice/templates/config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: authservice
  namespace: istio-system
data:
  # We listen on 0.0.0.0 since Istio 1.10, it changes the sidecar configuration only support
  # application listen on pod IP. See https://istio.io/latest/blog/2021/upcoming-networking-changes/
  # for more details.
  config.json: |
    {
      "listen_address": "0.0.0.0",
      "listen_port": "10003",
      "log_level": "trace",
      "threads": 8,
      "allow_unmatched_requests": "false",
      "chains": [
        {
          "name": "idp_filter_chain",
          "match": {
            "header": ":authority",
            "prefix": "minio",
          },
          "filters": [
          {
            "oidc":
              {
                "authorization_uri": "https://keycloak.geocluster.r-e.kr/realms/master/protocol/openid-connect/auth",
                "token_uri": "https://keycloak.geocluster.r-e.kr/realms/master/protocol/openid-connect/token",
                "callback_uri": "https://minio.geocluster.r-e.kr/callback",
                "jwks_fetcher": {
                  "jwks_uri": "https://keycloak.geocluster.r-e.kr/realms/master/protocol/openid-connect/certs",
                  "periodic_fetch_interval_sec": 10,
                  "skip_verify_peer_cert": true
                },
                "client_id": "${client_id}",
                "client_secret": "${client_secret}",
                "scopes": ["openid"],
                "id_token": {
                  "preamble": "Bearer",
                  "header": "Authorization"
                },
                "logout": {
                  "path": "/authservice_logout",
                  "redirect_uri": "https://minio.geocluster.r-e.kr/"
                },
                "skip_verify_peer_cert": true
              }
            }
          ]
        }
      ]
    }
---
# Source: authservice/templates/deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: authservice
  namespace: istio-system
  labels:
    app: authservice
spec:
  ports:
  - port: 10003
    name: grpc
  selector:
    app: authservice
---
# Source: authservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authservice
  # TODO(incfly): change to istio-system when the config map is also updated to that namespace.
  namespace: istio-system
  labels:
    app: authservice
spec:
  replicas: 1 # you can scale up productpage as long as session affinity is enabled via a DestinationRule (see ./config/bookinfo-gateway.yaml)
  selector:
    matchLabels:
      app: authservice
  template:
    metadata:
      labels:
        app: authservice
    spec:
      volumes:
        - name: authservice-config # declare the volume containing the authservice ConfigMap
          configMap:
            name: authservice
      containers:
      - name: authservice # authservice needs to be deployed in the sample Pod as the productpage
        image: ghcr.io/istio-ecosystem/authservice/authservice:0.5.3
        imagePullPolicy: Always
        ports:
          - containerPort: 10003
        volumeMounts:
          - name: authservice-config # mount the volume containing the authservice ConfigMap
            mountPath: /etc/authservice
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10004
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ext-authz
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
  action: CUSTOM
  provider:
    # The provider name must match the extension provider defined in the mesh config.
    name: authservice-grpc
  rules:
  - to:
    - operation:
        notPaths: ["/public"] # enable all except /public paths.