---
# Source: presto/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: presto
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
---
# Source: presto/templates/configmap-catalog.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: presto-catalog
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: presto/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: presto-coordinator
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: coordinator
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
data:
  node.properties: |-
    node.location=presto.local
    node.environment=development
    node.data-dir=/var/presto/data
  jvm.config: |-
    -server
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
  config.properties: |-
    coordinator=true
    http-server.http.port=8080
    discovery.uri=http://presto-discovery:8080
    discovery-server.enabled=true
    node-scheduler.include-coordinator=false
    resource-manager-enabled=false
    query.max-memory=512MB
    query.max-memory-per-node=256MB
  log.properties: |-
    com.facebook.presto=INFO
---
# Source: presto/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: presto-worker
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: worker
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
data:
  node.properties: |-
    node.location=presto.local
    node.environment=development
    node.data-dir=/var/presto/data
  jvm.config: |-
    -server
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
  config.properties: |-
    coordinator=false
    http-server.http.port=8080
    discovery.uri=http://presto-discovery:8080
    resource-manager-enabled=false
    query.max-memory=512MB
    query.max-memory-per-node=256MB
  log.properties: |-
    com.facebook.presto=INFO
---
# Source: presto/templates/service-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: presto-discovery
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: coordinator
---
# Source: presto/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: presto
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: coordinator
---
# Source: presto/templates/deployment-coordinator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: presto-coordinator
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: coordinator
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
  annotations:
    reloader.stakater.com/auto : "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: presto
      app.kubernetes.io/instance: presto
      app.kubernetes.io/component: coordinator
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: presto
        app.kubernetes.io/instance: presto
        app.kubernetes.io/component: coordinator
      annotations:
        checksum/catalog: 373e597c6f3906cc5991610fc0049b55864291c17a40574c59fc9a6710479e95
        checksum/coordinator: a3fb3178f201a7f99fe849ab2e34a37174e3c22644cb7e2043995528c8f9a887
    spec:
      serviceAccountName: presto
      containers:
        - name: coordinator
          image: "prestodb/presto:0.288"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - mountPath: /opt/presto-server/etc
              name: config
            - mountPath: /opt/presto-server/etc/catalog
              name: catalog
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: presto-coordinator
        - name: catalog
          configMap:
            name: presto-catalog
---
# Source: presto/templates/deployment-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: presto-worker
  namespace: presto
  labels:
    helm.sh/chart: presto-0.3.0
    app.kubernetes.io/name: presto
    app.kubernetes.io/instance: presto
    app.kubernetes.io/component: worker
    app.kubernetes.io/version: "0.288"
    app.kubernetes.io/managed-by: Helm
  annotations:
    reloader.stakater.com/auto : "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: presto
      app.kubernetes.io/instance: presto
      app.kubernetes.io/component: worker
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: presto
        app.kubernetes.io/instance: presto
        app.kubernetes.io/component: worker
      annotations:
        checksum/catalog: 373e597c6f3906cc5991610fc0049b55864291c17a40574c59fc9a6710479e95
        checksum/worker: 0777d47220ed10310d993fb9d628f53bedfd3f49b864ff889e65e77b98d7ea09
    spec:
      serviceAccountName: presto
      containers:
        - name: worker
          image: "prestodb/presto:0.288"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - mountPath: /opt/presto-server/etc
              name: config
            - mountPath: /opt/presto-server/etc/catalog
              name: catalog
      volumes:
        - name: config
          configMap:
            name: presto-worker
        - name: catalog
          configMap:
            name: presto-catalog
